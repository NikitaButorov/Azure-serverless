name: Build and deploy to Azure Container Apps

on:
  push:
    branches: [ "main" ]
  workflow_dispatch:

permissions:
  contents: read

jobs:
  build:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout repository
        uses: actions/checkout@v3

      # Вход в Azure
      - name: Azure login
        uses: azure/login@v1
        with:
          creds: ${{ secrets.AZURE_CREDENTIALS }}

      # Получаем учетные данные ACR
      - name: Get ACR credentials
        run: |
          ACR_USERNAME=$(az acr credential show -n ${{ secrets.REGISTRY_NAME }} --query "username" -o tsv)
          ACR_PASSWORD=$(az acr credential show -n ${{ secrets.REGISTRY_NAME }} --query "passwords[0].value" -o tsv)
          echo "ACR_USERNAME=$ACR_USERNAME" >> $GITHUB_ENV
          echo "ACR_PASSWORD=$ACR_PASSWORD" >> $GITHUB_ENV
          echo "ACR_SERVER=${{ secrets.REGISTRY_NAME }}.azurecr.io" >> $GITHUB_ENV

      # Docker login в ACR
      - name: Docker login to ACR
        uses: docker/login-action@v2
        with:
          registry: ${{ secrets.REGISTRY_NAME }}.azurecr.io
          username: ${{ env.ACR_USERNAME }}
          password: ${{ env.ACR_PASSWORD }}

      # Сборка и отправка образа используя Docker
      - name: Build and push Docker image
        uses: docker/build-push-action@v4
        with:
          push: true
          tags: ${{ secrets.REGISTRY_NAME }}.azurecr.io/${{ secrets.IMAGE_NAME }}:${{ github.sha }}
          file: ./Dockerfile
          
  deploy:
    runs-on: ubuntu-latest
    needs: build
    environment:
      name: 'production'
      
    steps:
      - name: Azure login
        uses: azure/login@v1
        with:
          creds: ${{ secrets.AZURE_CREDENTIALS }}

      # Получаем учетные данные ACR (повторно в рамках job deploy)
      - name: Get ACR credentials for deployment
        run: |
          ACR_USERNAME=$(az acr credential show -n ${{ secrets.REGISTRY_NAME }} --query "username" -o tsv)
          ACR_PASSWORD=$(az acr credential show -n ${{ secrets.REGISTRY_NAME }} --query "passwords[0].value" -o tsv)
          echo "ACR_USERNAME=$ACR_USERNAME" >> $GITHUB_ENV
          echo "ACR_PASSWORD=$ACR_PASSWORD" >> $GITHUB_ENV
          echo "ACR_SERVER=${{ secrets.REGISTRY_NAME }}.azurecr.io" >> $GITHUB_ENV

      # Обновляем или создаем Container App с прямой аутентификацией ACR
      - name: Deploy to Azure Container Apps
        run: |
          # Проверяем существует ли Container App
          APP_EXISTS=$(az containerapp show --name ${{ secrets.CONTAINER_APP_NAME }} --resource-group ${{ secrets.RESOURCE_GROUP }} 2>/dev/null || echo "false")
          
          if [ "$APP_EXISTS" = "false" ]; then
            # Создаем новый Container App
            echo "Creating new Container App..."
            az containerapp create \
              --name ${{ secrets.CONTAINER_APP_NAME }} \
              --resource-group ${{ secrets.RESOURCE_GROUP }} \
              --environment ${{ secrets.CONTAINER_APP_ENVIRONMENT }} \
              --image ${{ env.ACR_SERVER }}/${{ secrets.IMAGE_NAME }}:${{ github.sha }} \
              --registry-server ${{ env.ACR_SERVER }} \
              --registry-username ${{ env.ACR_USERNAME }} \
              --registry-password ${{ env.ACR_PASSWORD }} \
              --target-port 3000 \
              --ingress external \
              --min-replicas 0 \
              --max-replicas 10
          else
            # Обновляем существующий Container App
            echo "Updating existing Container App..."
            
            # Обновляем учетные данные ACR
            az containerapp registry set \
              --name ${{ secrets.CONTAINER_APP_NAME }} \
              --resource-group ${{ secrets.RESOURCE_GROUP }} \
              --server ${{ env.ACR_SERVER }} \
              --username ${{ env.ACR_USERNAME }} \
              --password ${{ env.ACR_PASSWORD }}
            
            # Обновляем образ
            az containerapp update \
              --name ${{ secrets.CONTAINER_APP_NAME }} \
              --resource-group ${{ secrets.RESOURCE_GROUP }} \
              --image ${{ env.ACR_SERVER }}/${{ secrets.IMAGE_NAME }}:${{ github.sha }}
          fi 